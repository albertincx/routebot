const BUTTONS = require('../config/buttons');
const getENV = require('../links');

const CREATE_P_RU = '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ';
const DEL_P_RU = '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç? –í—ã —É–≤–µ—Ä–µ–Ω—ã?';
const DEL_P_EN = 'You are about to delete your route. Is that correct?';
const CREATE_P_EN = 'Enter the name of';
const CREATE_RU = `–®–∞–≥ 1. ${CREATE_P_RU} *—Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ*(–µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ) –º–∞—Ä—à—Ä—É—Ç–∞`;
const CREATE_EN = `${CREATE_P_EN} your regular (daily) route`;
const AGREE_EN = "I've read and agree";
const AGREE_RU = '–Ø –ø—Ä–æ—á–∏—Ç–∞–ª –∏ —Å–æ–≥–ª–∞—Å–µ–Ω';

const TGPH_LINK = 'https://telegra.ph/Route-Cab-English-11-10';
const TGPH_LINK_RU = 'https://telegra.ph/Route-Cab-Russkaya-versiya-11-10';

const START_RU = `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ—á—Ç–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ, –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º
${TGPH_LINK_RU}
  `;
const START_EN = `Please read information about this bot
${TGPH_LINK}
  `;

const MENU_RU = '–ú–µ–Ω—é';
const MENU_EN = 'Menu';

const SEND_R_RU = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–Ω—É—é –ø–æ–µ–∑–¥–∫—É';
const SEND_R_EN = 'Send request to drive';

const SEND_R3_RU = '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å—Å—è –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –ø–æ–µ–∑–¥–∫–∏';
const SEND_R3_EN = 'Offer to unite for joint trips';
const SEND_RNOTIFY_RU = '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è';
const SEND_RNOTIFY_EN = 'Subscribe to updates';

const ROUTE_EX_RU = '–ú–∞—Ä—à—Ä—É—Ç —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç';
const ROUTE_EX_EN = 'A route with the same name already exists';
const ROUTE_LIST_RU = '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:';
const ROUTE_LIST_EN = 'Choose a route from the list below:';
const ROUTE_ADDED_RU = '–ú–∞—Ä—à—Ä—É—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω';
const ROUTE_ADDED_EN = 'Route added successfully';

const STATUS_ON_RU = '–í–∫–ª.';
const STATUS_OFF_RU = '–í—ã–∫–ª.';
const STATUS_ON_EN = 'On';
const STATUS_OFF_EN = 'Off';

const STATUS_ON_P_RU = '–ú–∞—Ä—à—Ä—É—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã';
const STATUS_OFF_P_RU = '–ú–∞—Ä—à—Ä—É—Ç –≤—ã–∫–ª—é—á–µ–Ω. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã';
const STATUS_ON_P_EN = 'Route enabled. Notifications enabled';
const STATUS_OFF_P_EN = 'Route disabled. Notifications disabled';

const STATUS_SUB_ON_RU = '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª.';
const STATUS_SUB_OFF_RU = '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª.';
const STATUS_SUB_ON_EN = 'Notifications enabled';
const STATUS_SUB_OFF_EN = 'Notifications disabled';
const NOTIFY_ON_RU = '–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è';
const NOTIFY_ON_EN = 'Enable notifications';
const CHANGED_RU = '–¢–∏–ø –∏–∑–º–µ–Ω–µ–Ω';
const CHANGED_EN = 'Account type changed';
const RU = 'ru';
const ARR_L = '¬´';
const SEARCH_RU = '–ù–∞–π—Ç–∏ –ø–æ—Ö–æ–∂–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã —Ä—è–¥–æ–º';
const SEARCH_EN = 'Find the same routes nearby';
const SEARCH_P_RU = '–ù–∞–π—Ç–∏ –≤–æ–¥–∏—Ç–µ–ª–µ–π —Å –ø–æ—Ö–æ–∂–∏–º–∏ –º–∞—Ä—à—Ä—É—Ç–∞–º–∏ —Ä—è–¥–æ–º';
const SEARCH_P_EN = 'Find drivers with similar nearby routes';

const HELLO_RU = `–û—Ç–ª–∏—á–Ω–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞! ${getENV('ACC_T_L_RU')}`;
const HELLO_EN = `Hello! Please select type of your account! ${getENV('ACC_T_L_EN')}`;
const ROUTE_SAME_RU = '–ü–æ—Ö–æ–∂–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã —Ä—è–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã';
const ROUTE_SAME_EN = 'Same routes nearby not found';
const ROUTE_SAME_D_RU = '–ü–æ—Ö–æ–∂–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã (—Å –≤–æ–¥–∏—Ç–µ–ª—è–º–∏) —Ä—è–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã';
const ROUTE_SAME_D_EN = 'Same routes (with drivers) nearby not found';
const ROUTE_STOP_RU = '–í—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã';

const ROUTE_STOP_EN = 'Active routes stopped';

const HELP_POINT = `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É - üìé –∏–ª–∏
–ø—Ä–∏—à–ª–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –ø—Ä–∏–º–µ—Ä:
\`\`\`XX.XXXXXX, XX.XXXXXX\`\`\`
–≥–¥–µ –• - —Ü–∏—Ñ—Ä–∞
`;

const POINT_1_RU = `–®–∞–≥ 2. –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∞—à–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (–ª–æ–∫–∞—Ü–∏—é) –ø—É–Ω–∫—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è (—Ç–æ—á–∫–∞ –ê)
${HELP_POINT}`;
const POINT_1_EN = 'Send departure point (Start Point)';

const POINT_2_RU = `–®–∞–≥ 3. –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∞—à–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (–ª–æ–∫–∞—Ü–∏—é) –ø—É–Ω–∫—Ç –ø—Ä–∏–±—ã—Ç–∏—è (—Ç–æ—á–∫–∞ –ë)
${HELP_POINT}`;
const POINT_2_EN = 'Send destination point (Last Point)';

const STOP_ALL_RU = '–û—Ç–∫–ª. –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã';
const STOP_ALL_EN = 'Stop all active Routes';

const TYPE_1_RU = BUTTONS.driver.labelRU;
const TYPE_2_RU = BUTTONS.sharingDriver.labelRU;
const TYPE_3_RU = BUTTONS.passenger.labelRU;

const TYPE_1_EN = BUTTONS.driver.label;
const TYPE_2_EN = BUTTONS.sharingDriver.label;
const TYPE_3_EN = BUTTONS.passenger.label;

const getStatus = (status, lang, icon, pop = false) => {
  if (lang === RU) {
    if (pop) {
      return `${status === 0 ? STATUS_OFF_P_RU : STATUS_ON_P_RU} ${icon}`;
    }
    return `${status === 0 ? STATUS_OFF_RU : STATUS_ON_RU} ${icon}`;
  }
  if (pop) {
    return `${status === 0 ? STATUS_OFF_P_EN : STATUS_ON_P_EN} ${icon}`;
  }
  return `${status === 0 ? STATUS_OFF_EN : STATUS_ON_EN} ${icon}`;
};
const getStatusSubscribe = (lang, s, icon) => {
  if (lang === RU) {
    return `${s === 0 || !s ? STATUS_SUB_OFF_RU : STATUS_SUB_ON_RU} ${icon}`;
  }
  return `${s === 0 || !s ? STATUS_SUB_OFF_EN : STATUS_SUB_ON_EN} ${icon}`;
};

const getType1 = lang => (lang === RU ? TYPE_1_RU : TYPE_1_EN);
const getType2 = lang => (lang === RU ? TYPE_2_RU : TYPE_2_EN);
const getType3 = lang => (lang === RU ? TYPE_3_RU : TYPE_3_EN);

const getTypeShow = (l, t) => {
  if (t === 1) {
    return getType1(l);
  }
  if (t === 2) {
    return getType2(l);
  }
  return getType3(l);
};

const getNearLabel = (l, t) => {
  let n = l === RU ? SEARCH_RU : SEARCH_EN;
  if (t) {
    n = l === RU ? SEARCH_P_RU : SEARCH_P_EN;
  }
  return `üëÄ ${n}`;
};

const typeLabel = (l, fromRoute) => {
  if (l === RU) {
    return `–¢–∏–ø ${fromRoute ? '–º–∞—Ä—à—Ä—É—Ç–∞' : '–∞–∫–∫–∞—É–Ω—Ç–∞'}`;
  }
  return 'Account type';
};

const sentAlreadyPop = (lang, not = false) => {
  if (not) {
    if (lang === RU) {
      return '–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è';
    }
    return 'You have already subscribed to route updates';
  }
  if (lang === RU) {
    return '–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –∑–∞–ø—Ä–æ—Å –ø–æ —ç—Ç–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É';
  }
  return 'You have already sent a request on this route';
};
const showNotifyUser = (lang, name) => {
  if (lang === RU) {
    return `
–ü–æ –≤–∞—à–µ–º—É –º–∞—Ä—à—Ä—É—Ç—É "${name}" –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ—Ö–æ–∂–∏–π –º–∞—Ä—à—Ä—É—Ç
`;
  }
  return `
A similar route has been added to your route "${name}"
`;
};
const showNotifyUserDriver = (lang, name, usernameFrom) => {
  if (lang === RU) {
    return `–° –≤–∞–º–∏ —Ö–æ—á–µ—Ç –∫–∞—Ç–∞—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${usernameFrom} –ø–æ –º–∞—Ä—à—Ä—É—Ç—É "${name}"`;
  }
  return `The user @${usernameFrom} wants to ride with you along the route "${name}"`;
};
const showNotifyUserCoop = (lang, name, uFrom) => {
  if (lang === RU) {
    return `–ü–æ –≤–∞—à–µ–º—É –º–∞—Ä—à—Ä—É—Ç—É "${name}" –ø–æ—è–≤–∏–ª–æ—Å—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —Å–æ–≤–º–µ—Å—Ç–Ω—ã–º –ø–æ–µ–∑–¥–∫–∞–º –æ—Ç @${uFrom}`;
  }
  return `There is an offer from @${uFrom} for joint trips on your route "${name}"`;
};

const showPoint = (routeType, lang) => {
  if (routeType === 1) {
    return `${lang === RU ? POINT_1_RU : POINT_1_EN}
${lang === RU ? getENV('POINT_TXT_L_RU') : getENV('POINT_TXT_L_EN')}`;
  }
  if (routeType === 2) {
    return `${lang === RU ? POINT_2_RU : POINT_2_EN}
${lang === RU ? getENV('POINT_TXT_L_RU') : getENV('POINT_TXT_L_EN')}`;
  }
  return 'error';
};
const editTime = (lang, isFromB) => {
  if (lang === RU) {
    if (isFromB) {
      return `–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑ —Ç–æ—á–∫–∏ –ë
üïù
–≤–æ —Å–∫–æ–ª—å–∫–æ –≤—ã–µ–∑–∂–∞–µ—Ç–µ –û–¢–¢–£–î–ê ‚¨ÖÔ∏è`;
    }
    return `–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑ —Ç–æ—á–∫–∏ –ê
üïù
–≤–æ —Å–∫–æ–ª—å–∫–æ –≤—ã–µ–∑–∂–∞–µ—Ç–µ –¢–£–î–ê ‚û°Ô∏è`;
  }
  if (isFromB) {
    return 'Select depa from B point time';
  }
  return 'Set depa from A point  time';
};

const editTimeSuccess = (lang, isFromB) => {
  if (lang === RU) {
    if (isFromB) {
      return '–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑ —Ç–æ—á–∫–∏ –ë';
    }
    return '–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑ —Ç–æ—á–∫–∏ –ê';
  }
  if (isFromB) {
    return 'Select depa from B point time';
  }
  return 'Set depa from A point  time';
};
const editTimeOk = (lang, isFromB) => {
  if (lang === RU) {
    if (isFromB) {
      return '–í—Ä–µ–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ';
    }
    return '–í—Ä–µ–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ';
  }
  if (isFromB) {
    return 'Times saved';
  }
  return 'Times saved';
};

const showRoutesEmpty = (lang, t) => {
  if (lang === RU) {
    if (t) {
      return ROUTE_SAME_D_RU;
    }
    return ROUTE_SAME_RU;
  }
  if (t) {
    return ROUTE_SAME_D_EN;
  }
  return ROUTE_SAME_EN;
};

const iconWarn = () => '‚ö† ';
const timeError = lang => {
  if (lang === RU) {
    // if (field) {
    //   return '–í—Ä–µ–º—è –º–∞—Ä—à—Ä—É—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ';
    // }
    return `${iconWarn()}–í—Ä–µ–º—è –º–∞—Ä—à—Ä—É—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ`;
  }
  // if (field) {
  //   return 'Time is not defined';
  // }
  return `${iconWarn()}Route time is not defined`;
};
const noUserNameTxt2 = lang => {
  if (lang === RU) {
    // if (field) {
    //   return '–í—Ä–µ–º—è –º–∞—Ä—à—Ä—É—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ';
    // }
    return `${iconWarn()} –í–Ω–∏–º–∞–Ω–∏–µ! –£ –≤–∞—Å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω username –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ —Ç–µ–ª–µ–≥—Ä–∞–º. 
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ username —á—Ç–æ–±—ã —Å –≤–∞–º–∏ –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞`;
  }
  // if (field) {
  //   return 'Time is not defined';
  // }
  return `${iconWarn()} Attention! You do not have a "username" configured in your telegram profile.
Please set a "username" so that all route participants can contact you`;
};
const settingsText2 = lang => {
  if (lang === RU) {
    // if (field) {
    //   return '–í—Ä–µ–º—è –º–∞—Ä—à—Ä—É—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ';
    // }
    return `–ù–∞—Å—Ç—Ä–æ–π–∫–∏:
- –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞
- –û—Ç–∫–ª—é—á–∏—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã ${getENV('SETT_T_L_RU')}`;
  }
  // if (field) {
  //   return 'Time is not defined';
  // }
  return `Settings:
- You can change your account type 
- Disable all active routes ${getENV('SETT_T_L_EN')}`;
};
function showHourTxt(lang, hour, view = false) {
  const m = `${hour}`.match(/\.3/);
  let h = parseInt(hour, 10);
  if (lang === 'en' && h > 12) {
    h -= 12;
  }
  let txtHour = `${h}`;
  if (h < 10 && lang === RU) {
    txtHour = `0${h}`;
  }
  let min = '00';
  if (m) {
    min = '30';
  }
  const time = `${txtHour}:${min}`;
  let llang = '';
  if (lang === 'en') {
    llang = 'pm';
    if (hour < 13) {
      llang = 'am';
    }
  }
  let afternoon = '';
  if (hour === 12.3 && !view) {
    afternoon = lang === RU ? ' –ø–æ–ª–¥–µ–Ω—å' : ' afternoon';
  }
  return `${time}${llang}${afternoon}`;
}

module.exports = {
  deletedRoute: l => (l === RU ? '–ú–∞—Ä—à—Ä—É—Ç —É–¥–∞–ª–µ–Ω' : 'Route deleted'),
  confirmDeletion: lang => (lang === RU ? DEL_P_RU : DEL_P_EN),
  yesRoute: l => (l === RU ? '–î–∞ —É–¥–∞–ª–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç' : 'Yes delete this route'),
  no: l => (l === RU ? '–ù–µ—Ç' : 'No'),
  sentR: l => (l === RU ? '–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω' : 'Request sent'),
  // sentNotify: l => (l === RU ? '–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞' : 'Subscription created'),
  sent3R: l => (l === RU ? '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' : 'Offer sent'),
  labelName: lang => (lang === RU ? '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ' : 'Route name'),
  labelStatus: lang => (lang === RU ? '–°—Ç–∞—Ç—É—Å' : 'Status'),
  labelSubs: l => (l === RU ? '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' : 'Notifications'),
  labelType: typeLabel,
  labelTime: l => (l === RU ? '–í—Ä–µ–º—è' : 'Time'),
  labelTimeA: l => (l === RU ? '–¢—É–¥–∞ –≤' : 'Start drive time'),
  labelTimeB: l => (l === RU ? '–û–±—Ä–∞—Ç–Ω–æ –≤' : 'Return time'),
  labelA: lang => (lang === RU ? '–¢–æ—á–∫–∞ –ê' : 'departure point'),
  labelB: lang => (lang === RU ? '–¢–æ—á–∫–∞ –ë' : 'destination point'),
  check: lang => (lang === RU ? CREATE_P_RU : CREATE_P_EN),
  account: lang => (lang === RU ? CHANGED_RU : CHANGED_EN),
  success: lang => (lang === RU ? ROUTE_ADDED_RU : ROUTE_ADDED_EN),
  home: (lang, type) =>
    `${lang === RU ? MENU_RU : MENU_EN}
${typeLabel(lang)}: ${getTypeShow(lang, type)}`,
  start: lang => (lang === RU ? START_RU : START_EN),
  agree: lang => (lang === RU ? AGREE_RU : AGREE_EN),
  start2: lang => (lang === RU ? HELLO_RU : HELLO_EN),
  start3: lang => (lang === RU ? '–ü—Ä–∏–≤–µ—Ç!' : 'Hello!'),
  driverStartNewRoute: lang =>
    `${lang === RU ? CREATE_RU : CREATE_EN}
${lang === RU ? getENV('CREATE_TXT_L_RU') : getENV('CREATE_TXT_L_EN')}`,
  point: showPoint,
  asDept: () => 'Send my current location as departure',
  asDest: () => 'Send my current location as destination',
  support: links => {
    let s = 'For support:';
    s += `${links.length ? `\n${links.join('\n\n')}` : ''}`;
    return s;
  },
  stoppedAll: lang => (lang === RU ? ROUTE_STOP_RU : ROUTE_STOP_EN),
  icon: s => `${s === 0 || !s ? 'üî¥' : 'üü¢'}`,
  iconWarn,
  routesList: lang => (lang === RU ? ROUTE_LIST_RU : ROUTE_LIST_EN),
  routesEmpty: showRoutesEmpty,
  getType: getTypeShow,
  notifyUser: showNotifyUser,
  notifyUserDriver: showNotifyUserDriver,
  notifyUserCoop: showNotifyUserCoop,
  showStatus: getStatus,
  statusSubscribe: getStatusSubscribe,
  sentAlready: sentAlreadyPop,
  editTime,
  editTimeSuccess,
  editTimeOk,
  showHour: showHourTxt,
  noUserNameTxt: noUserNameTxt2,
  noUnameW: l => (l === RU ? 'Username –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : 'Username is not set'),
  setUpUname: l => (l === RU ? 'Username —Å–æ—Ö—Ä–∞–Ω–µ–Ω' : 'Username saved'),
  timeError,
  settingsText: settingsText2,

  // menus
  editR: lang => (lang === RU ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å' : 'Edit'),
  activate: lang => (lang === RU ? '–í–∫–ª—é—á–∏—Ç—å' : 'Enable'),
  deactivate: lang => (lang === RU ? '–í—ã–∫–ª—é—á–∏—Ç—å' : 'Disable'),
  subscribe: l => (l === RU ? NOTIFY_ON_RU : NOTIFY_ON_EN),
  unsubscribe: l =>
    `üîï ${l === RU ? '–í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' : 'Disable notifications'}`,
  back: lang => `${ARR_L} ${lang === RU ? '–°–ø–∏—Å–æ–∫ –ú–∞—Ä—à—Ä—É—Ç–æ–≤' : 'Routes List'}`,
  backRoute: l => `${ARR_L} ${l === RU ? '–∫ –º–∞—Ä—à—Ä—É—Ç—É' : 'to Route'}`,
  backJust: lang => `${ARR_L} ${lang === RU ? '–ù–∞–∑–∞–¥' : 'Back'}`,
  addRoute: lang => (lang === RU ? '–î–æ–±–∞–≤–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç' : 'Add route'),
  addName: lang => (lang === RU ? '–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∏–º—è' : 'Send name of the route'),
  stopRoutes: l => (l === RU ? STOP_ALL_RU : STOP_ALL_EN),
  settings: l => (l === RU ? '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' : 'Settings'),
  changeType: lang => (lang === RU ? '–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø' : 'Change account type'),
  aboutTxt: lang => (lang === RU ? '–æ –±–æ—Ç–µ' : 'about'),
  myRoutes: lang => (lang === RU ? '–ú–æ–∏ –º–∞—Ä—à—Ä—É—Ç—ã' : 'My Routes'),
  changeHours: l => (l === RU ? '–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –º–∞—Ä—à—Ä—É—Ç–∞' : 'Change time'),
  changeHA: l => (l === RU ? '–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞' : 'Change start time'),
  changeHB: l => (l === RU ? '–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –æ–±—Ä–∞—Ç–Ω–æ' : 'Change return time'),
  deleteRoute: l => `${l === RU ? '–£–¥–∞–ª–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç' : 'Delete route'}`,
  nearBy: getNearLabel,
  menu: lang => (lang === RU ? MENU_RU : MENU_EN),
  sendRequest: lang => (lang === RU ? SEND_R_RU : SEND_R_EN),
  sendRequest3: lang => (lang === RU ? SEND_R3_RU : SEND_R3_EN),
  sendRequestNotify: lang => (lang === RU ? SEND_RNOTIFY_RU : SEND_RNOTIFY_EN),
  routeExists: lang => (lang === RU ? ROUTE_EX_RU : ROUTE_EX_EN),
  isUName: l => (l === RU ? '–Ø —É—Å—Ç–∞–Ω–æ–≤–∏–ª username' : 'I have set the username'),
};
